apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"gitlab-redis:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"gitlab-redis\")].image"}]'
  labels:
    app: gitlab-redis
    app.kubernetes.io/component: gitlab-redis
    app.kubernetes.io/instance: gitlab-redis
    app.kubernetes.io/name: gitlab-redis
  name: gitlab-redis
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: gitlab-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deployment: gitlab-redis
    spec:
      containers:
      - args:
        - exec redis-server
        command:
        - /bin/sh
        - -ec
        image: ' '
        imagePullPolicy: IfNotPresent
        name: gitlab-redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 300Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: gitlab-redis-volume-1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: gitlab-redis-volume-1
        persistentVolumeClaim:
          claimName: gitlab-redis-data
